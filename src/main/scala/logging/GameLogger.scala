package logging

import java.io.File
import java.text.SimpleDateFormat
import java.util.Date
import java.util.logging.{FileHandler, Level, Logger, SimpleFormatter}

// General format for logs files
// Logs are generated by ChatGPT
object GameLogger {

  // Create logging folder if missing
  private val logDir = new File("logging")
  if (!logDir.exists()) logDir.mkdirs()

  // Returns logger for given class (one log file per class per day)
  def getLogger(clazz: Class[_]): Logger = {
    val name = clazz.getSimpleName
    val logger = Logger.getLogger(name)

    if (logger.getHandlers.isEmpty) {
      // File: logging/classname-yyyy-MM-dd.log
      val dateStr = new SimpleDateFormat("yyyy-MM-dd").format(new Date())
      val logFile = s"logging/${name.toLowerCase}-$dateStr.log"

      val fileHandler = new FileHandler(logFile, true) // append mode
      fileHandler.setFormatter(new SimpleFormatter {
        override def format(r: java.util.logging.LogRecord): String = {
          val time = new SimpleDateFormat("HH:mm:ss").format(new Date(r.getMillis))
          s"[$time] [${r.getLevel}] [$name] ${r.getMessage}\n"
        }
      })

      logger.addHandler(fileHandler)
      logger.setLevel(Level.ALL)
      logger.setUseParentHandlers(false)
    }

    logger
  }
}
